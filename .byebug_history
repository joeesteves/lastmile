exit
a
exit
a.as_json
exit
a.as_json
exit
a.as_json
a
exit
exut
ary
exit
hsh
a
continue
@implementos
exit
hsh
hsh.as_json
hsh
exit
hsh.as_json
continue
conyinue
hsh.as_json
hsh
continue
exit
a['gastos_varios']
a['gasoil_cantidad']
continue
exit
a
continue
a["gastos_varios"]
a
continue
exit
hsh
continue
hsh
exit
Asociacion.select(:implemento).distinct
hsh
continue
hsh
exit
hsh
hsh.delete("aguatero")
hsh
exit
Asociacion.all
Asociacion
a
continue
continuie
exit
hsh['alfa'].gastos_varios
hsh['alfa'].nombre
hsh['alfa']
hsh
exit
excit
@compra.
hsh[:actividades].!as_json
hsh[:actividades].as_json
hsh[:actividades].as_json!
hsh[:actividades].as_json
hsh[:actividades].methods.grep /inse/
hsh[:actividades].methods.grep /dele/
hsh[:actividades].methods
hsh[:actividades].as_json
hsh[:actividades].is_a? Array
hsh[:actividades]
hsh[:actividades].insert(-1, hsh[:actividades].delete_at(0)) if hsh[:actividades][0].nombre == "0"
exit
a
a.insert(-1, a.delete_at(0))
a = [1,2,3]
[1,2,3].insert(-1,)
[1,2,3].insert[-1,0]
[1,2,3]
hsh[:actividades].first.nombre == 0
hsh[:actividades].first.nombre
hsh[:actividades].first
exit
ary[0][:actividades][0]["nombre"]
ary[0][:actividades][0]
ary[0][:actividades].as_json
ary[0][:actividades].as_json["nombre"]
ary[0][:actividades]["nombre"]
ary[0][:actividades][:nombre]
ary[0][:actividades].as_json
ary[0][:actividades]
ary[0]
ary
exit
hsh[:actividades]
continue
hsh[:actividades]
hsh[:actividades].to_s
hsh[:actividades]
hsh
continue
beta[0]['actividades'][0]['superficie'].to_f
alfa[0]['actividades'][0]['superficie'].to_f
alfa[0]['actividades'][0]['superficie']
continue
alfa[0]['actividades'][0]['superficie']
continue
beta
alfa[0]["actividades"]
alfa[0]["actividades]
alfa[0]
alfa
continue
resumen
alfa
alfa[0]['actividades']
continue
detalle.first["detalle"].first["insumos"]
detalle.first["detalle"].first
detalle.first["detalle"]
detalle.first["detalle"]["insumos"]
detalle.first["detalle"]
detalle.first
detalle
detalle.first["insumos"]
detalle.first
detalle
exit
beta[0]['detalle']
beta['detalle']
beta
continue
exit
detalleexit
detalle
detale
beta
continue
hoja.row(1)
continue
hoja.row(1)
exit
hoja.row(1)
continue
exit
hoja.row(1)
continue
hoja.row(1)
continue
exit
hoja.row(1)
a.nombre_operarios
a
continue
alfa
continue
alfa
resumen.as_json
resumen
alfa
continue
resumen
"jose, pepe, jorge".gsub /j,(?: \w+$)/, 'hola'
['jose', 'pepe', 'jorge'].join(', ').match 
['jose', 'pepe', 'jorge'].join(')
['jose', 'pepe', 'jorge'].to_sentence
['jose', 'pepe', 'jorge'].methods.grep /to_/
['jose', 'pepe', 'jorge'].
['jose', 'pepe', 'jorge'].methods.grep /hu/
['jose', 'pepe', 'jorge'].humanize
['jose', 'pepe', 'jorge']
[].is_a? Array
resumen.nombre_operarios
resumen.as_json
continue
resumen.as_json
exit
resumen.as_json
resumen
exit
resumen
continue
contine
beta
resumen
continue
alfa
resumen
continue
resumen
exit
continue
obj
exit
continue
obj
exit
Depreciacion.maquina(k)
exit
Depreciacion.maquina(k)
continue
Depreciacion.maquina(k)
exit
Depreciacion.maquina(k)
Depreciacion.maquina(k).to_f
exit
Depreciacion.maquina(k).to_f
Depreciacion.maquina(k)
.sum(:valor).to_f
exit
alfa
continue
resumen
exit
resumen = Resumen.new('alfa', superficie: 20, horas: 100, gastos_varios: 0, gasoil_cantidad:200, gasoil_costo: 400, costo_operarios: 7000, nombre_operarios: ['Jorge Cafrune'])
resumen
exit
resumen
exit
alfa
resumen
alfa
resumen
exit
resumen
resumen+
resumen.as_json
alfa
exit
alfa
exit
Persona.maquina k
continue
exit
Persona.maquina k
exit
Persona.maquina k
exit
resumen.as_json
resumen
alfa
continue
args[:precio_gasoil]
continue
args[:precio_gasoil]
continue
args[:precio_gasoil]
args
exit
rake
hsh[k] = hsh[k] || Resumen.new k
hsh[k] ||= Resumen.new k
